<Window x:Class="FileEncryptionAndDecryption.Receiver"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileEncryptionAndDecryption"
        mc:Ignorable="d"
        Title="Cipher" Height="511.5" Width="673">
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="#FF939393" Offset="0.003"/>
                <GradientStop Color="#FE999999"/>
                <GradientStop Color="#FF979797"/>
                <GradientStop Color="#FFD2D2D2"/>
                <GradientStop Color="#FED5D5D5" Offset="0.983"/>
                <GradientStop Color="#FED3D3D3" Offset="0.243"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Label x:Name="label" Content="     Wybierz odbiorców:                " HorizontalAlignment="Left" Margin="77,43,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Width="206"/>
        <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="125" Margin="55,91,0,0" VerticalAlignment="Top" Width="255" Background="#FFF1F1F1" SelectedIndex="0" />
        <Button x:Name="buttonBack" Content="&lt; Wstecz" HorizontalAlignment="Left" Margin="358,409,0,0" VerticalAlignment="Top" Width="116" Height="35" Click="ButtonBack_Click"/>
        <Button x:Name="buttonNext" Content="Dalej &gt;" HorizontalAlignment="Left" Margin="479,409,0,0" VerticalAlignment="Top" Width="116" Height="35" Click="ButtonNext_Click"/>
        <Label x:Name="labelLogin" Content="Login: " HorizontalAlignment="Left" Margin="347,122,0,0" VerticalAlignment="Top" IsEnabled="False"/>
        <Label x:Name="labelPassword" Content="Hasło: " HorizontalAlignment="Left" Margin="347,164,0,0" VerticalAlignment="Top" IsEnabled="False"/>
        <TextBox x:Name="textBoxLogin" HorizontalAlignment="Left" Height="23" Margin="398,124,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="198" FontStyle="Italic" FontWeight="Light" IsEnabled="False"/>
        <PasswordBox x:Name="textBoxPassword" MaxLength="20" HorizontalAlignment="Left" Height="23" Margin="398,164,0,0" VerticalAlignment="Top" Width="198" IsEnabled="False" />
        <TextBox x:Name="textBoxVisiblePassword" Visibility="Hidden" HorizontalAlignment="Left" Height="23" Margin="397,164,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="198" FontStyle="Italic" FontWeight="Light" IsEnabled="False"/>
        <Button x:Name="buttonAddReceiver" Content="Dodaj" HorizontalAlignment="Left" Margin="480,232,0,0" VerticalAlignment="Top" Width="116" Height="35" Click="ButtonAdd_Click" IsEnabled="False"/>
        <CheckBox x:Name="checkBoxShowPassword" Content="Pokaż hasło" HorizontalAlignment="Left" Margin="398,201,0,0" VerticalAlignment="Top" IsEnabled="False" Checked="ShowPassword" Unchecked="HidePassword"/>
        <Label x:Name="labelError" Content="" HorizontalAlignment="Left" Margin="347,91,0,0" VerticalAlignment="Top" Width="248" Foreground="Red"/>
        <Label x:Name="labelNewReceiver" Content="Dodaj nowego odbiorcę:" HorizontalAlignment="Left" Margin="377,43,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Width="206" IsEnabled="False"/>
        <Button x:Name="buttonAddNewReceiver" Content="Dodaj nowego &#xD;&#xA;    odbiorcę" HorizontalAlignment="Left" Margin="122,409,0,0" VerticalAlignment="Top" Width="116" Height="35" Click="buttonAddNewReceiver_Click"/>
        <Button x:Name="buttonCancelAdding" Content="Anuluj" HorizontalAlignment="Left" Margin="358,232,0,0" VerticalAlignment="Top" Width="116" Height="35" Click="buttonCancelAddingReceiver_Click" IsEnabled="False"/>
        <ListBox x:Name="listBoxSelected" HorizontalAlignment="Left" Height="125" Margin="55,250,0,0" VerticalAlignment="Top" Width="255" Background="#FFF1F1F1" SelectedIndex="0" />
        <Button x:Name="buttonAddNewReceiver_Copy" Content="" HorizontalAlignment="Left" Margin="191,218,0,0" VerticalAlignment="Top" Width="21" Height="32" Click="buttonAddReceiver_Click" RenderTransformOrigin="0.5,0.5" BorderBrush="#FFD4D3D3" Foreground="White">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90.088"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Background>
                <ImageBrush ImageSource="resources\arrow-19.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Label x:Name="labelErrorNoReceivers" Content="" HorizontalAlignment="Left" Height="29" Margin="55,375,0,0" VerticalAlignment="Top" Width="255" Foreground="Red"/>
        <Button x:Name="buttonDeleteNewReceiver" Content="" HorizontalAlignment="Left" Margin="150,218,0,0" VerticalAlignment="Top" Width="21" Height="32" Click="buttonDeleteReceiver_Click" RenderTransformOrigin="0.5,0.5" BorderBrush="#FFD4D3D3" Foreground="White">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Background>
                <ImageBrush ImageSource="resources\arrow-19.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
    </Grid>
</Window>
